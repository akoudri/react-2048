pipeline {
    agent any

    environment {
        NEXT_PUBLIC_APP_VERSION = "1.0.${BUILD_NUMBER}"
        AWS_DEFAULT_REGION = 'eu-west-3'
    }

    stages {
        // stage('Build') {
        //     agent {
        //         docker {
        //             image 'mynodejs:latest'
        //             reuseNode true
        //         }
        //     }
        //     steps {
        //         sh '''
        //             npm ci
        //             npm run build
        //         '''
        //     }
        // }
        // stage('Test') {
        //     agent {
        //         docker {
        //             image 'mynodejs:latest'
        //             reuseNode true
        //         }
        //     }
        //     steps {
        //         sh '''
        //             npm run test
        //             npm run test-coverage
        //         '''
        //     }
        // }
        stage('Deploy AWS') {
            agent {
                docker {
                    image 'amazon/aws-cli'
                    args "-u root --entrypoint=''"
                    reuseNode true
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws-access-key', 
                    passwordVariable: 'AWS_SECRET_ACCESS_KEY', 
                    usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                    sh '''
                        yum install -y jq
                        REV = $(aws ecs register-task-definition --cli-input-json file://aws/taskdef.json | jq -r '.taskDefinition.revision')
                        aws ecs update-service --cluster ProdCluster --service JenkinsTraining-Service-Prod --task-definition JenkinsTraining-TaskDef-Prod:$REV
                    '''
                }
            }
        }
    }
}