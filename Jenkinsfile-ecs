pipeline {
    agent any
    
    environment {
        NEXT_PUBLIC_APP_VERSION = "1.0.${BUILD_NUMBER}"
        AWS_S3_BUCKET = 'jenkins-training-120225'
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'mynodejs:latest'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    npm ci
                    npm run build
                '''
            }
        }
        stage('Tests') {
            parallel {
                stage('Running tests') {
                    agent {
                        docker {
                            image 'mynodejs:latest'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm run test
                        '''
                    }
                }
                stage('Reporting') {
                    agent {
                        docker {
                            image 'mynodejs:latest'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm run test-coverage
                        '''
                    }
                }
            }
        }
        stage('Deploiement') {
            agent {
                docker {
                    image 'amazon/aws-cli'
                    args "--entrypoint=''"
                    reuseNode true
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws-cli-key', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                    sh 'aws s3 sync out s3://${AWS_S3_BUCKET}'
                }
            }
        }
    }
    
    post {
        always {
            archiveArtifacts artifacts: 'test-report.html'
        }
    }
}